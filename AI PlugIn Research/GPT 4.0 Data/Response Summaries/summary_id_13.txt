Original Response: 
In BMP files, padding is used to align the rows of the image data to a 4-byte boundary.
This requirement is due to the format specification and is common in file formats to ensure that data aligns with memory boundaries, which can improve access speeds and compatibility across different systems.
Each pixel in a 24-bit BMP file uses 3 bytes (1 byte each for Red, Green, and Blue).
When the width of the image in pixels is multiplied by 3 (the number of bytes per pixel), the resulting number might not be a multiple of 4.
To align the row to a 4-byte boundary, padding bytes are added to the end of each row.
The padding for each row can be calculated using the formula:
\[ \text{Padding} = (4 - (\text{Width} \times 3) \mod 4) \mod 4 \]

This formula ensures that the total number of bytes in each row (pixels plus padding) is a multiple of 4.
If the width of the image already results in a multiple of 4, no padding is needed.
When you read or write BMP files:
- **Reading:** You need to skip these padding bytes when processing each row of pixel data.
- **Writing:** You must add these padding bytes when constructing each row.
If an image is 100 pixels wide, the calculation for each row will be:
- Total pixel bytes per row = 100 pixels × 3 bytes/pixel = 300 bytes
- Padding needed = (4 - (300 % 4)) % 4 = (4 - 0) % 4 = 0 bytes

But if an image is 101 pixels wide:
- Total pixel bytes per row = 101 pixels × 3 bytes/pixel = 303 bytes
- Padding needed = (4 - (303 % 4)) % 4 = (4 - 3) % 4 = 1 byte

This padding byte is generally set to 0x00 and must be written to the file after each row and skipped when reading each row to process the image correctly.

Summary: 
- **Writing:** You must add these padding bytes when constructing each row.
